@startuml classes-elementlist

!include style.plantuml

' Interfaces

interface ElementListWireframeProtocol <<Wireframe>> {
	{static} createElementListModule() -> UIViewController
    dismissModule(from: ElementListViewProtocol, with: ElementEntity)
}

interface ElementListViewProtocol <<View>> {
    presenter : ElementListPresenterProtocol? 
    reloadElementList(with: [ElementEntity])
}

interface ElementListPresenterProtocol <<Presenter>> {
    view : ElementListViewProtocol? 
    wireframe : ElementListWireframeProtocol? 
    interactor : ElementListInteractorProtocol? 
    viewDidLoad()
    didSelect(element: ElementEntity, on: ElementListViewProtocol)
}

interface ElementListInteractorProtocol <<Interactor>> {
	getElements() -> [ElementEntity]
}


interface UICollectionViewDataSource {
	collectionView(_: UICollectionView, numberOfItemsInSection: Int) -> Int
	collectionView(_: UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell
}

interface UICollectionViewDelegate {
	collectionView(_: UICollectionView, didSelectItemAt: IndexPath)
}

class ElementListWireframe <<Wireframe>>
class ElementListView <<View>> {
	collectionView: UICollectionView
}
class ElementListPresenter <<Presenter>>
class ElementListInteractor <<Interactor>>

' Relationships

ElementListViewProtocol --> ElementListPresenterProtocol
ElementListPresenterProtocol -l> ElementListViewProtocol
ElementListPresenterProtocol --> ElementListInteractorProtocol
ElementListWireframeProtocol <-u-- ElementListPresenterProtocol

' Implementations

ElementListWireframe .u.|> ElementListWireframeProtocol
ElementListView .u...|> ElementListViewProtocol
ElementListPresenter .u.|> ElementListPresenterProtocol
ElementListInteractor .u.|> ElementListInteractorProtocol

ElementListView ..|> UICollectionViewDelegate
ElementListView .|> UICollectionViewDataSource

@enduml
